{"version":3,"sources":["home/services/components/auths/authAction.js","home/services/components/types/types.js","home/services/constants/constantApi.js","home/services/https/auths.js","helpers/commons/PrivateRoute.jsx","helpers/commons/PublicRoute.jsx","home/routes/routes.js","App.jsx","serviceWorker.js","helpers/func-js/is-empty.js","home/services/components/auths/authReducer.js","home/services/components/rootReducer.js","store.js","i18n.js","index.js"],"names":["_headers","is_auth","window","localStorage","getItem","login","data","history","remember","dispatch","AuthsApi","signin","then","res","isRemember","global","setItem","JSON","stringify","_token","setCurrentUser","user_url","push","catch","error","console","log","response","status","toast","position","POSITION","TOP_RIGHT","getCurrentUser","type","res_api","clearLocalStorage","log_out","logout","clear","location","href","SET_CURRENT_USER","userLogin","parse","headers","a","axios","post","PROXY","get","PrivateRoute","Component","component","Layout","layout","rest","isAuth","render","props","to","PublicRoute","MainLayout","React","lazy","Home","Login","NotFound","routes","path","exact","isPrivate","App","useDispatch","useEffect","setTimeout","result","length","map","route","index","key","showContent","Boolean","hostname","match","isEmpty","value","undefined","Object","keys","trim","initialState","isAuthenticated","user","authReducer","state","action","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","defaultLanguage","language","i18n","use","Backend","LanguageDetector","initReactI18next","init","lng","fallbackLng","backend","loadPath","interpolation","escapeValue","ReactDOM","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ea13f53e.chunk.js","sourcesContent":["// call res api return\r\nimport {toast} from 'react-toastify';\r\nimport {AuthsApi} from '../../https/auths';\r\nimport * as type from '../types/types';\r\n\r\n// authorization \r\nexport let _headers = ''\r\n//export let is_auth = null\r\nexport let is_auth = window.localStorage.getItem(\"isAuthenticated\") === 'true'\r\n// TODO: sửa lạo biến toàn cục is_auth\r\n\r\n\r\n// login\r\nexport const login = (data, history, remember) => dispatch => {\r\n    AuthsApi.signin(data).then(res => {\r\n        res.data.isRemember = remember;\r\n        global.localStorage.setItem(\"token\", JSON.stringify(res.data));\r\n        _headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${res.data._token}`\r\n        };\r\n        is_auth = true;\r\n        dispatch(setCurrentUser(res.data.user_url));\r\n        history.push('/demoLogin');\r\n\r\n    }).catch(error => {\r\n        console.log('ERROR_LOGIN', error);\r\n        if (error.response && error.response.status === 401) {\r\n            toast.error(\"Your accout is not actived. Please checkout our email!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        } else {\r\n            toast.error(\"Please check your email or password again!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    })\r\n}\r\n\r\n// setCurrentUser\r\n\r\nexport const setCurrentUser = (user_url) => dispatch => {\r\n    AuthsApi.getCurrentUser(user_url).then(res => {\r\n        is_auth = true;\r\n        dispatch({\r\n            type: type.SET_CURRENT_USER,\r\n            res_api: res.data\r\n        });\r\n        window.localStorage.setItem('isAuthenticated', 'true');\r\n    }).catch(error => {\r\n        console.log(error.response);\r\n        clearLocalStorage();\r\n    })\r\n}\r\n\r\n// logout\r\nexport const log_out = () => {\r\n    AuthsApi.logout().then(res => {\r\n        if (res) {\r\n            clearLocalStorage();\r\n        }\r\n    }).catch(() => clearLocalStorage());\r\n}\r\n\r\nconst clearLocalStorage = () => {\r\n    window.localStorage.clear();\r\n    window.location.href = '/demoLogin/login';\r\n}","// define constants store \r\nexport const LOGINED = \"LOGINED\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LIST_EDUCATION = \"LIST_EDUCATION\";\r\nexport const LIST_EXPERIENCE = \"LIST_EXPERIENCE\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const SUGGEST_JOB = \"SUGGEST_JOB\";\r\nexport const SUGGEST_USER_SYSTEM = \"SUGGEST_USER_SYSTEM\";\r\nexport const JOB_USER = \"JOB_USER\";\r\nexport const TEAM_USER = \"TEAM_USER\";\r\nexport const LIST_CITIES_FILTER = \"LIST_CITIES_FILTER\";\r\nexport const LIST_TEAM_ORGS_FILTER = \"LIST_TEAM_ORGS_FILTER\";\r\nexport const LIST_FOLLOWER = \"LIST_FOLLOWER\";\r\nexport const LIST_FOLLOWING = \"LIST_FOLLOWING\";\r\nexport const FOLLOWER_USER = \"FOLLOWER_USER\";\r\nexport const FOLLOWING_USER = \"FOLLOWING_USER\";\r\nexport const LIST_POSITION_AND_ROLE = \"LIST_POSITION_AND_ROLE\";\r\nexport const ADD_EXPERIENCE = \"ADD_EXPERIENCE\";\r\nexport const LIST_STAGE = \"LIST_STAGE\";\r\nexport const LIST_TEAM = \"LIST_TEAM\";\r\nexport const ORG_OF_USER = \"ORG_OF_USER\";\r\nexport const TEAM_OF_USER = \"TEAM_OF_USER\";\r\nexport const ADD_SKILL = \"ADD_SKILL\";\r\nexport const TEAM = \"TEAM\";\r\nexport const LIST_KEYWORD = \"LIST_KEYWORD\";\r\n\r\nexport const LIST_ROLES = \"LIST_ROLES\";\r\nexport const LIST_POSITIONS = \"LIST_POSITIONS\";\r\nexport const UPDATE_TALENT_INTEREST = \"UPDATE_TALENT_INTEREST\";\r\nexport const CURRENT_USER_INTEREST = \"CURRENT_USER_INTEREST\";\r\nexport const CURRENT_OTHER_INTEREST = \"CURRENT_OTHER_INTEREST\";\r\nexport const UPDATE_SHORT_BIO = \"UPDATE_SHORT_BIO\";\r\nexport const GET_SHORTBIO_DESCRIPTION = \"GET_SHORTBIO_DESCRIPTION\";\r\nexport const GET_USER_INFO = \"GET_USER_INFO\";\r\nexport const GET_EXPERIENCE = \"GET_EXPERIENCE\";\r\nexport const GET_EDUCATION = \"GET_EDUCATION\";\r\nexport const GET_DEGREE_LIST = \"GET_DEGREE_LIST\";\r\nexport const GET_MAJOR_LIST = \"GET_MAJOR_LIST\";\r\nexport const GET_UNIVERSITY_LIST = \"GET_UNIVERSITY_LIST\";\r\nexport const ADD_EDUCATION = \"ADD_EDUCATION\";\r\nexport const GET_AN_EDUCATION_INFO = \"GET_AN_EDUCATION_INFO\";\r\nexport const ADD_EVENT = \"ADD_EVENT\";\r\nexport const TYPES_EVENT = \"TYPES_EVENT\";\r\nexport const ALL_ORGS = \"ALL_ORGS\"\r\nexport const LIST_POST_TEAM = \"LIST_POST_TEAM\"\r\n//TEAM\r\nexport const JOBS_BY_WORK_SCHEDULE_TEAM = \"JOBS_BY_WORK_SCHEDULE_TEAM\";\r\nexport const LIST_ORG = \"LIST_ORG\";\r\nexport const INVITE_TEAM_TO_INCUBATOR = \"INVITE_TEAM_TO_INCUBATOR\";\r\nexport const LIST_USER_IN_SYSTEMS = \"COMMON/LIST_USER_IN_SYSTEMS\";\r\nexport const JOBS_FREELANCER = \"JOBS_FREELANCER\";\r\nexport const UPDATE_A_POST_OF_TEAM = \"UPDATE_A_POST_OF_TEAM\"\r\n","// define constant url api\r\n\r\nimport {PROXY} from \"../../../environment\";\r\n\r\nlet user_url = localStorage.getItem('token') ? JSON.parse(localStorage.getItem('token'))['user_url'] : \"\";\r\nexport const login_API = PROXY + \"/accounts/api/login/\";\r\nexport const logout_API = PROXY + \"/accounts/api/logout/\";\r\nexport const current_user_API = PROXY + \"/user/\";\r\n\r\nlet userLogin = JSON.parse(localStorage.getItem(\"token\"));\r\nexport const headers = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': userLogin ? `Token ${userLogin._token}` : ''\r\n}","// return api\r\nimport axios from 'axios';\r\nimport {login_API, headers, logout_API, current_user_API} from '../constants/constantApi';\r\nimport {_headers} from '../components/auths/authAction'\r\n\r\n\r\n// note: Tên function trong này không trùng với tên function trong Action \r\n\r\nconst signin = async (data) => {\r\n    return await axios.post(login_API, data);\r\n}\r\n\r\nconst getCurrentUser = (user_url) => {\r\n    return axios.get(current_user_API + user_url + \"/\", {headers: _headers ? _headers : headers});\r\n}\r\n\r\n\r\nconst logout = () => {\r\n    return axios.post(logout_API, {}, {headers: _headers ? _headers : headers});\r\n}\r\n\r\nexport const AuthsApi = {\r\n    signin,\r\n    getCurrentUser,\r\n    logout\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { is_auth } from '../../home/services/components/auths/authAction';\r\nconst PrivateRoute = ({ component: Component, layout: Layout, ...rest }) => {\r\n    //const isAuth = is_auth !== null ? is_auth : Boolean(localStorage.getItem(\"isAuthenticated\"));\r\n    /**\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            window.location.href = \"/login\";\r\n        } \r\n        return () => { }\r\n    }, [])\r\n     */\r\n\r\n    const isAuth = is_auth\r\n\r\n     if (!isAuth) {\r\n         window.location.href = \"/login\";\r\n         return null\r\n     }\r\n   \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuth ?\r\n                    <Layout>\r\n                        <Component {...props} />\r\n                    </Layout>\r\n                    :\r\n                    <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react';\r\nimport { Route} from \"react-router-dom\";\r\n\r\nconst PublicRoute = ({ component: Component, layout: Layout, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <Layout>\r\n                <Component {...props} />\r\n            </Layout>\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n","import React from 'react';\r\n\r\nconst MainLayout = React.lazy(() => import('../pages/components/MainLayout'));\r\nconst Home = React.lazy(() => import('../pages/components/homes/Home'));\r\nconst Login = React.lazy(() => import('../pages/components/login/Login'));\r\nconst NotFound = React.lazy(() => import('../../error-pages/Page404'));\r\n\r\nconst routes = [\r\n    // --------------------------- general  -----------------------\r\n    {\r\n        path: '/demoLogin',\r\n        exact: true,\r\n        layout: MainLayout,\r\n        component: Home,\r\n        isPrivate: true\r\n    },\r\n    {\r\n        path: '/demoLogin/login',\r\n        layout: Login,\r\n        component: Login,\r\n        isPrivate: false\r\n    }\r\n\r\n];\r\n\r\n// ---------------------------- route 404 -----------------\r\nroutes.push({\r\n    path: '*',\r\n    layout: NotFound,\r\n    component: NotFound,\r\n    isPrivate: false\r\n})\r\n\r\nexport default routes;","import React, { useEffect  } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport PrivateRoute from './helpers/commons/PrivateRoute';\r\nimport PublicRoute from './helpers/commons/PublicRoute';\r\nimport routes from './home/routes/routes';\r\nimport { setCurrentUser, log_out } from './home/services/components/auths/authAction'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  // Check for token\r\n  let userLogin = JSON.parse(localStorage.getItem(\"token\"));\r\n  useEffect(() => {\r\n    if (userLogin) {\r\n      dispatch(setCurrentUser(userLogin.user_url));\r\n      if (!userLogin.isRemember) {\r\n        setTimeout(function () { log_out(); }, 18000000);\r\n      }\r\n    }\r\n    return () => { }\r\n  }, [])\r\n\r\n  // route này mới chỉ là của home thôi, sau có define route admin thì cộng thêm route đó vào\r\n  const showContent = routes => {\r\n\r\n    let result = [];\r\n    if (routes.length > 0) {\r\n      result = routes.map((route, index) => {\r\n        return route.isPrivate ? (\r\n          <PrivateRoute\r\n            key={index}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            component={route.component}\r\n            layout={route.layout}\r\n          />\r\n        ) : (\r\n            <PublicRoute\r\n              key={index}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              component={route.component}\r\n              layout={route.layout}\r\n            />\r\n          );\r\n      });\r\n    }\r\n    return <Switch> {result} </Switch>;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      {showContent(routes)}\r\n    </Router>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import * as type from '../types/types';\r\nimport isEmpty from '../../../../helpers/func-js/is-empty';\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case type.SET_CURRENT_USER: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.res_api),\r\n                user: action.res_api\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\nexport default authReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './auths/authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer\r\n})\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './home/services/components/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(rootReducer, {}, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f))\r\n// {} là giá trị khởi tạo của store\r\nexport default store;","// src/i18n.js\r\nimport i18n from \"i18next\";\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport {initReactI18next} from \"react-i18next\";\r\n\r\nconst defaultLanguage = JSON.parse(localStorage.getItem('token'));\r\nlet language = 'en';\r\nif (defaultLanguage) {\r\n    switch (defaultLanguage['country_code']) {\r\n        case 'VN': {\r\n            language = 'vi';\r\n            break;\r\n        }\r\n        default:\r\n            language = 'en';\r\n    }\r\n}\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        lng: language,\r\n        fallbackLng: \"en\",\r\n        // debug: true,\r\n        backend: {\r\n            /* translation file path */\r\n            loadPath: '/locales/{{lng}}/translation.json'\r\n        },\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport moment from 'moment';\r\n// import 'progressbar.js/dist/progressbar';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport \"./i18n\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={null}>\r\n      <App />\r\n    </Suspense>\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}